%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.3 (Build 15D21) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 3012 512
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 3012 512
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.2 0.2 0.2 sc
q
686 111.67867 m
686 396.08316 l
734.01105 396.08316 l
734.01105 272.80051 l
875.19611 272.80051 l
875.19611 396.08316 l
923.20715 396.08316 l
923.20715 111.67867 l
875.19611 111.67867 l
875.19611 228.04445 l
734.01105 228.04445 l
734.01105 111.67867 l
686 111.67867 l
686 111.67867 l
h
1029.8463 176.37154 m
1001.3652 111.67867 l
950.09918 111.67867 l
1075.4161 396.08316 l
1126.6823 396.08316 l
1251.9993 111.67867 l
1200.7332 111.67867 l
1172.2521 176.37154 l
1029.8463 176.37154 l
1029.8463 176.37154 l
h
1152.722 220.72073 m
1101.0492 337.90027 l
1049.3762 220.72073 l
1152.722 220.72073 l
1152.722 220.72073 l
h
1505.9265 303.7229 m
1505.9265 256.7966 1485.4474 227.23076 1444.4886 215.02451 c
1518.9465 111.67867 l
1457.9155 111.67867 l
1389.9677 207.29391 l
1326.9022 207.29391 l
1326.9022 111.67867 l
1278.8912 111.67867 l
1278.8912 396.08316 l
1384.6782 396.08316 l
1428.0784 396.08316 1459.136 388.75949 1477.8523 374.112 c
1496.5685 359.46448 1505.9265 336.00168 1505.9265 303.7229 c
1505.9265 303.7229 l
1505.9265 303.7229 l
h
1442.0474 263.44244 m
1451.8124 271.8512 1456.6948 285.3457 1456.6948 303.92633 c
1456.6948 322.50699 1451.6768 335.25555 1441.6405 342.17242 c
1431.6042 349.08932 1413.702 352.5477 1387.9332 352.5477 c
1326.9022 352.5477 l
1326.9022 250.82936 l
1386.7126 250.82936 l
1413.8376 250.82936 1432.2825 255.03368 1442.0474 263.44244 c
1442.0474 263.44244 l
1442.0474 263.44244 l
h
1789.5557 303.7229 m
1789.5557 256.7966 1769.0765 227.23076 1728.1178 215.02451 c
1802.5756 111.67867 l
1741.5446 111.67867 l
1673.5967 207.29391 l
1610.5314 207.29391 l
1610.5314 111.67867 l
1562.5203 111.67867 l
1562.5203 396.08316 l
1668.3074 396.08316 l
1711.7074 396.08316 1742.7651 388.75949 1761.4813 374.112 c
1780.1976 359.46448 1789.5557 336.00168 1789.5557 303.7229 c
1789.5557 303.7229 l
1789.5557 303.7229 l
h
1725.6765 263.44244 m
1735.4415 271.8512 1740.324 285.3457 1740.324 303.92633 c
1740.324 322.50699 1735.3059 335.25555 1725.2697 342.17242 c
1715.2334 349.08932 1697.3312 352.5477 1671.5624 352.5477 c
1610.5314 352.5477 l
1610.5314 250.82936 l
1670.3417 250.82936 l
1697.4668 250.82936 1715.9115 255.03368 1725.6765 263.44244 c
1725.6765 263.44244 l
1725.6765 263.44244 l
h
1967.0013 359.05768 m
1938.7913 359.05768 1914.9895 349.02158 1895.5951 328.94904 c
1876.2007 308.87653 1866.5037 284.53217 1866.5037 255.91528 c
1866.5037 227.29837 1876.2007 202.95403 1895.5951 182.8815 c
1914.9895 162.80899 1938.7913 152.77287 1967.0013 152.77287 c
1995.2113 152.77287 2019.0132 162.80899 2038.4076 182.8815 c
2057.802 202.95403 2067.499 227.29837 2067.499 255.91528 c
2067.499 284.53217 2057.802 308.87653 2038.4076 328.94904 c
2019.0132 349.02158 1995.2113 359.05768 1967.0013 359.05768 c
1967.0013 359.05768 l
1967.0013 359.05768 l
h
1967.0013 108.83055 m
1924.6863 108.83055 1889.1531 122.86755 1860.4005 150.94196 c
1831.6479 179.01636 1817.272 214.00711 1817.272 255.91528 c
1817.272 297.82346 1831.6479 332.81421 1860.4005 360.88861 c
1889.1531 388.96301 1924.6863 403 1967.0013 403 c
2009.3164 403 2044.8496 388.96301 2073.6021 360.88861 c
2102.3547 332.81421 2116.7307 297.82346 2116.7307 255.91528 c
2116.7307 214.00711 2102.3547 179.01636 2073.6021 150.94196 c
2044.8496 122.86755 2009.3164 108.83055 1967.0013 108.83055 c
1967.0013 108.83055 l
1967.0013 108.83055 l
h
2234.7783 191.42584 m
2298.2505 396.08316 l
2341.3789 396.08316 l
2404.8513 191.42584 l
2476.4609 396.08316 l
2528.1338 396.08316 l
2428.8567 111.67867 l
2381.2527 111.67867 l
2321.4421 306.57101 l
2318.1873 306.57101 l
2258.377 111.67867 l
2210.7727 111.67867 l
2111.4956 396.08316 l
2163.1685 396.08316 l
2234.7783 191.42584 l
2234.7783 191.42584 l
h
2501.752 138.93918 m
2501.752 147.34795 2504.6677 154.46815 2510.4998 160.30003 c
2516.3315 166.13191 2523.4517 169.04781 2531.8606 169.04781 c
2540.2693 169.04781 2547.4573 166.13191 2553.4248 160.30003 c
2559.3923 154.46815 2562.376 147.34795 2562.376 138.93918 c
2562.376 130.53043 2559.3923 123.3424 2553.4248 117.37489 c
2547.4573 111.40739 2540.2693 108.42368 2531.8606 108.42368 c
2523.4517 108.42368 2516.3315 111.40739 2510.4998 117.37489 c
2504.6677 123.3424 2501.752 130.53043 2501.752 138.93918 c
2501.752 138.93918 l
2501.752 138.93918 l
h
2615.7148 396.08316 m
2663.7258 396.08316 l
2663.7258 111.67867 l
2615.7148 111.67867 l
2615.7148 396.08316 l
2615.7148 396.08316 l
h
2861.5046 359.05768 m
2833.2947 359.05768 2809.4927 349.02158 2790.0984 328.94904 c
2770.7041 308.87653 2761.0068 284.53217 2761.0068 255.91528 c
2761.0068 227.29837 2770.7041 202.95403 2790.0984 182.8815 c
2809.4927 162.80899 2833.2947 152.77287 2861.5046 152.77287 c
2889.7146 152.77287 2913.5166 162.80899 2932.9109 182.8815 c
2952.3054 202.95403 2962.0024 227.29837 2962.0024 255.91528 c
2962.0024 284.53217 2952.3054 308.87653 2932.9109 328.94904 c
2913.5166 349.02158 2889.7146 359.05768 2861.5046 359.05768 c
2861.5046 359.05768 l
2861.5046 359.05768 l
h
2754.9038 150.94196 m
2726.1514 179.01636 2711.7751 214.00711 2711.7751 255.91528 c
2711.7751 297.82346 2726.1514 332.81421 2754.9038 360.88861 c
2783.6562 388.96301 2819.1897 403 2861.5046 403 c
2903.8196 403 2939.353 388.96301 2968.1055 360.88861 c
2996.8579 332.81421 3011.2341 297.82346 3011.2341 255.91528 c
3011.2341 214.00711 2996.8579 179.01636 2968.1055 150.94196 c
2939.353 122.86755 2903.8196 108.83055 2861.5046 108.83055 c
2819.1897 108.83055 2783.6562 122.86755 2754.9038 150.94196 c
2754.9038 150.94196 l
h
2754.9038 150.94196 m
W*
0 0 3012 512 rc
681 408 m
3016.2341 408 l
3016.2341 103.42368 l
681 103.42368 l
h
f
Q
0.29411766 0.2 0.29411766 sc
q
195.16664 510.55576 m
183.37663 509.32516 174.11295 504.21573 163.09456 492.86621 c
158.21638 487.8418 156.9924 486.43167 148.64326 476.21637 c
136.81699 461.74774 131.35767 456.22095 123.95499 451.22418 c
119.39389 448.14505 110.27858 443.57907 102.55159 440.50247 c
99.452087 439.26828 93.591179 436.93985 89.491882 435.31448 c
61.776295 424.32379 51.329983 414.56583 46.33646 395.00299 c
44.702187 388.6008 43.781475 380.89789 42.877819 366.06573 c
41.460476 342.79959 39.974571 334.86874 34.924095 323.60504 c
33.178448 319.71231 29.048319 312.66266 22.741207 302.81091 c
12.617762 286.99722 9.0150976 280.30603 6.3984413 272.45587 c
4.5203838 266.82111 3.8757424 263.60712 3.6286964 258.6416 c
3.2771728 251.58324 4.5544839 244.82733 7.6975193 237.12042 c
10.646835 229.88829 13.221047 225.26924 21.635849 212.10933 c
30.654661 198.00423 34.210167 191.70091 36.687157 185.42596 c
39.990173 177.05852 41.605221 167.50377 42.685188 149.9451 c
43.366829 138.85733 43.795624 133.5134 44.358643 129.07828 c
47.410259 105.04872 55.980328 93.185898 77.774429 82.823013 c
80.029045 81.750954 87.424095 78.656921 94.207886 75.947144 c
108.60984 70.194954 113.77785 67.915604 118.73111 65.130569 c
128.91768 59.403103 135.11232 53.499683 149.70401 35.613834 c
157.0889 26.561853 163.174 19.737967 166.68924 16.565773 c
179.80698 4.729125 191.39384 0.90002733 208.11751 2.8751049 c
214.34409 3.6101687 219.68987 4.7502108 233.69276 8.3277426 c
256.65607 14.194445 264.49261 15.194527 276.46329 13.785471 c
283.02216 13.013326 288.32584 11.88928 302.98175 8.1645164 c
322.31735 3.2506342 329.67868 2.0600624 338.17038 2.4741275 c
345.17184 2.8154857 349.71082 4.0009675 355.98236 7.1262646 c
363.64914 10.946638 372.39114 18.782238 381.88519 30.342602 c
384.57224 33.614403 388.82062 38.781303 391.30087 41.793907 c
397.19659 48.955513 406.13199 57.861355 410.47034 60.900131 c
417.20624 65.617706 424.87228 69.349014 439.92722 75.237167 c
454.22034 80.827583 460.17773 83.507553 466.11917 87.019646 c
481.86774 96.329376 488.90982 107.95699 491.5907 129.07828 c
492.15372 133.5134 492.58142 138.85733 493.2605 149.9451 c
495.02902 178.80966 497.276 185.56012 513.52881 210.83696 c
525.12292 228.86821 529.44061 237.70535 531.57367 247.77196 c
532.38306 251.58905 532.47736 260.88824 531.74567 264.63989 c
530.91309 268.90598 528.28809 276.4184 525.96527 281.18066 c
523.56628 286.10001 519.18909 293.50446 512.96362 303.17444 c
496.94662 328.05432 494.96735 334.32925 493.07043 366.2475 c
492.17838 381.26144 491.2475 388.74405 489.39374 395.80276 c
485.30859 411.3591 477.18365 420.7168 460.45999 429.12717 c
454.90924 431.91837 451.75351 433.2558 436.29953 439.36499 c
431.61981 441.21463 425.05804 444.08475 421.75247 445.72754 c
408.46857 452.32858 402.50864 457.60345 387.38333 476.14368 c
378.90106 486.54071 375.71631 490.14297 370.60199 495.12302 c
360.5304 504.93042 351.62912 509.44443 340.09305 510.59427 c
332.33524 511.36752 323.22427 510.09769 306.9722 505.97812 c
281.61462 499.55084 279.35455 499.15533 267.97449 499.15533 c
256.54941 499.15533 254.33435 499.54321 229.15814 505.95233 c
212.65213 510.15439 203.36705 511.41187 195.16664 510.55576 c
195.16664 510.55576 l
195.16664 510.55576 l
h
232.35051 406.55026 m
247.00641 398.49219 248.9182 397.33652 249.40468 396.23901 c
249.59731 395.80496 249.65427 379.08023 249.54579 354.72348 c
249.38472 318.47922 249.42717 313.83978 249.9267 313.08075 c
250.23796 312.60779 252.30284 311.26089 254.55202 310.06342 c
256.78342 308.8754 265.01791 304.21271 272.81744 299.72089 c
287.01987 291.54138 l
287.25568 305.64648 l
287.38519 313.38974 287.5488 319.80902 287.61844 319.87881 c
287.68811 319.94861 298.15689 326.15631 310.85385 333.65674 c
333.96225 347.3074 l
364.65256 330.03958 l
364.74326 228.99545 l
364.83212 130.078 364.81979 127.9277 364.15195 126.82438 c
363.04221 124.99035 357.43344 121.48371 335.99377 109.21882 c
330.98755 106.35526 325.5188 103.09437 323.78656 101.94051 c
321.86389 100.65978 319.97421 99.709511 318.90732 99.486664 c
317.35321 99.162025 316.93024 99.230736 314.97128 100.12285 c
313.77414 100.66814 312.03464 101.6904 311.14404 102.37167 c
308.02786 104.75644 304.90442 106.74242 300.15213 109.36023 c
287.52777 116.31463 287.4523 116.36588 286.96219 118.35405 c
286.79425 119.03422 286.74707 137.65767 286.85663 159.76051 c
287.03946 196.58644 287.00647 200.00656 286.45758 200.83978 c
286.11877 201.35419 283.82751 202.82977 281.17929 204.23883 c
278.60944 205.60643 270.42319 210.23676 263.02267 214.50864 c
255.62218 218.78053 249.44785 222.28825 249.32812 222.28825 c
249.20842 222.28825 249.11047 215.98096 249.11047 208.27405 c
249.11047 199.00394 248.97914 194.01372 248.72302 193.53276 c
248.21733 192.58467 244.1768 190.02831 240.76677 188.49965 c
239.26236 187.82529 235.28896 185.61427 231.87892 183.55377 c
228.49428 181.50853 222.19298 177.78558 217.91229 175.30156 c
213.63161 172.81754 209.1554 170.16048 207.99054 169.41232 c
206.82968 168.66672 205.19469 167.74115 204.38098 167.36963 c
201.40373 166.00893 201.07979 166.12816 190.26926 172.55688 c
184.82771 175.79269 178.48613 179.54364 176.1938 180.88181 c
173.8358 182.2585 171.82352 183.69664 171.56558 184.18996 c
170.86072 185.53793 171.10051 385.66019 171.80901 387.04163 c
172.19681 387.79849 176.55656 390.3912 190.84969 398.36569 c
201.0435 404.05316 211.42815 409.86169 213.92183 411.27112 c
216.42494 412.686 218.58669 413.84204 218.74666 413.8522 c
218.90628 413.8624 225.02257 410.57932 232.35051 406.55026 c
232.35051 406.55026 l
232.35051 406.55026 l
h
232.35051 406.55026 m
W*
0 0 3012 512 rc
-1.427907 515.80933 m
537.24188 515.80933 l
537.24188 -2.6186047 l
-1.427907 -2.6186047 l
h
f
Q
q
176.22325 283.08475 m
176.22325 185.00452 l
180.70837 182.70123 l
183.16512 181.43968 188.48868 178.54443 192.47951 176.29918 c
196.47035 174.05392 199.92297 172.20041 200.11336 172.20041 c
200.33743 172.20041 200.42201 186.25591 200.35135 211.6465 c
200.24846 248.57169 200.28252 251.16805 200.88223 252.27145 c
201.41313 253.24826 201.74265 253.4503 202.80443 253.4503 c
204.55344 253.4503 205.91655 252.82352 210.52982 249.89925 c
212.70024 248.52344 218.03551 245.37173 222.35587 242.91321 c
226.6927 240.44524 238.94164 233.43307 249.63269 227.29799 c
260.32373 221.1629 273.88782 213.44415 279.83856 210.10928 c
290.5296 204.11746 291.98132 203.17874 292.74619 201.76231 c
293.20349 200.91608 293.14563 156.34943 292.65976 134.91251 c
292.4639 126.27971 292.48697 121.25092 292.72641 120.38546 c
292.92706 119.66002 293.62234 118.57294 294.26416 117.98061 c
295.17474 117.14054 315.97577 105.36838 317.58676 104.78149 c
317.78302 104.71004 317.91629 144.0894 317.91629 202.23386 c
317.91629 279.85651 317.82254 299.88025 317.45862 300.16898 c
317.20599 300.3692 312.24124 303.24704 306.38312 306.58917 c
300.52502 309.9313 295.22379 312.97202 294.55707 313.3721 c
293.34885 314.09753 l
293.40375 275.34061 l
293.43414 254.01253 293.34885 236.01277 293.21408 235.31416 c
292.81573 233.24664 292.12741 232.60245 290.34656 232.63002 c
288.45145 232.65939 286.72183 233.51833 281.3031 237.12125 c
278.98145 238.66463 274.05368 241.62953 270.31915 243.72932 c
266.58496 245.82913 259.70132 249.69902 254.97821 252.35451 c
244.90739 258.01627 230.63045 266.27072 218.87761 273.22632 c
214.26436 275.95615 208.91223 278.9711 206.97833 279.92905 c
202.91426 281.94217 201.32562 283.26248 200.86758 285.00717 c
200.67793 285.7308 200.63693 303.36096 200.7724 325.99484 c
200.90311 347.83075 200.88333 366.05612 200.72845 366.4747 c
200.51134 367.06195 186.32849 375.57108 176.47955 381.02316 c
176.33859 381.10114 176.22325 337.02161 176.22325 283.08475 c
176.22325 283.08475 l
176.22325 283.08475 l
h
176.22325 283.08475 m
W*
0 0 3012 512 rc
171.22325 386.02325 m
322.91629 386.02325 l
322.91629 99.781395 l
171.22325 99.781395 l
h
f
ep
end
